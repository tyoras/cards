version = "2.5.3"

#
# See http://scalameta.org/scalafmt/#Configuration for details
#
project {
  includeFilters = [
    ".*.\\.scala$"
    ".*\\..sbt$"
  ]
}

maxColumn = 160

# Vertical alignment, options: none, some, more
#
# This awkward, self-contradictory, configuration ensures that only
# the common sbt tokens get aligned, and not "production" code.
#
align = none
align {
  openParenCallSite = false
  openParenDefnSite = false
  tokens = ["%", ":=", "~=", "<-"]
}

assumeStandardLibraryStripMargin = true

includeCurlyBraceInSelectChains = false
includeNoParensInSelectChains = false

continuationIndent {
  callSite = 2
  defnSite = 2
  extendSite = 2
}

danglingParentheses.preset = true

newlines {
  alwaysBeforeTopLevelStatements = false
  sometimesBeforeColonInMethodReturnType = false
  penalizeSingleSelectMultiArgList = false
  alwaysBeforeElseAfterCurlyIf = false
  neverInResultType = true
  alwaysBeforeMultilineDef = false
  afterCurlyLambda = Never
}

spaces {
  afterKeywordBeforeParen = true
  beforeContextBoundColon = Always
}

binPack {
  parentConstructors = true
  literalArgumentLists = true
}

optIn {
  breaksInsideChains = false
  breakChainOnFirstMethodDot = false
  configStyleArguments = true
}

runner {
  optimizer {
    # Set to -1 to disable. Number of characters needed to trigger "config-style" formatting
    # see: http://scalameta.org/scalafmt/#runner.optimizer.forceConfigStyleOnOffset
    forceConfigStyleOnOffset = -1

    # minimum number of func arguments before config-style (look at top of file) is enabled
    forceConfigStyleMinArgCount = 20
  }
}

rewrite {
  rules = [
    RedundantParens
    SortImports
  ]
}

optIn {
  blankLineBeforeDocstring = true
}

lineEndings=preserve